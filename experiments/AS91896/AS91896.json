{
  "meta": {
    "as_code": "AS91896",
    "title": "Use advanced programming techniques to develop a computer program",
    "version": "1",
    "credits": 6,
    "assessment_type": "Achievement Standard",
    "source_pdf": "as91896.pdf",
    "purpose": "This achievement standard involves using advanced programming techniques to develop a computer program."
  },
  "grade_descriptors": {
    "N1": "Evidence does not reach the minimum threshold for Achieved-level indicators.",
    "N2": "Some Achieved-level indicators are met, but not enough to satisfy all required Achieved criteria.",
    "A3": "All Achieved-level indicators are met; no Merit-level indicator meets the Merit threshold.",
    "A4": "All Achieved indicators are met and at least one Merit indicator is met, but overall performance is below the Merit threshold.",
    "M5": "All Achieved indicators are met and the Merit threshold is reached; no Excellence-level indicator meets the Excellence threshold.",
    "M6": "All Achieved indicators are met, all Merit indicators are met, and at least one Excellence indicator is met, but overall performance is below the Excellence threshold.",
    "E7": "All Achieved and Merit indicators are met and the Excellence threshold is reached, but not all Excellence indicators are met.",
    "E8": "All Achieved, Merit, and Excellence indicators are met."
  },
  "key_terms": [],
  "omis": [
    {
      "id": "performs_specified_task",
      "description": "Program demonstrably performs the specified task from the assessment brief.",
      "level": "A",
      "weight": 1,
      "detection_hint": "Provide direct evidence (run logs, screenshots, or screencast) of required task behaviour. Stating intent without demonstration is insufficient. Highlight the exact phrase(s) that satisfy or violate this indicator.",
      "success_examples": ["code was able to be run", "screencasts confirmed function of the program"],
      "source_ref": "Moderator commentary – Performance overview"
    },
    {
      "id": "uses_two_or_more_advanced_techniques",
      "description": "Implements at least two advanced programming techniques during development.",
      "level": "A",
      "weight": 1,
      "detection_hint": "Show concrete code for two+ advanced techniques used in development. Mere claims or plans without code evidence do not count. Highlight the exact phrase(s) that satisfy or violate this indicator.",
      "success_examples": [],
      "source_ref": "AS PDF"
    },
    {
      "id": "code_layout_readable",
      "description": "Code is clearly laid out (consistent indentation, logical sections, whitespace for readability).",
      "level": "A",
      "weight": 1,
      "detection_hint": "Demonstrate consistently formatted source files with obvious structure. A single header comment cannot substitute for poor layout. Highlight the exact phrase(s) that satisfy or violate this indicator.",
      "success_examples": [],
      "source_ref": "AS PDF"
    },
    {
      "id": "comments_present_documenting_code",
      "description": "Code includes comments that document purpose and behaviour of sections.",
      "level": "A",
      "weight": 1,
      "detection_hint": "Provide comments that explain purpose/behaviour of sections where needed. Sparse single-word or purely restating code syntax is insufficient. Highlight the exact phrase(s) that satisfy or violate this indicator.",
      "success_examples": ["documenting the code with comments"],
      "source_ref": "Moderator commentary – Performance overview"
    },
    {
      "id": "testing_evidence_organised",
      "description": "Testing evidence is organised to show inputs used and whether expected outputs occurred.",
      "level": "A",
      "weight": 1,
      "detection_hint": "Include a table or structured artefact mapping each input to expected vs actual output. Unstructured claims of working are insufficient. Highlight the exact phrase(s) that satisfy or violate this indicator.",
      "success_examples": ["shows each input of the program being tested", "whether expected outputs were generated or not"],
      "source_ref": "Moderator commentary – Performance overview"
    },
    {
      "id": "testing_expected_cases",
      "description": "Testing demonstrates correct behaviour on typical/expected inputs; includes at least one debugging instance.",
      "level": "A",
      "weight": 1,
      "detection_hint": "Show typical-case tests with expected and actual results plus one before/after debugging example. Saying “it works” without data is insufficient. Highlight the exact phrase(s) that satisfy or violate this indicator.",
      "success_examples": [],
      "source_ref": "Moderator commentary – Performance overview"
    },
    {
      "id": "appropriate_names_and_comments",
      "description": "Uses appropriate names and comments that describe code function and behaviour.",
      "level": "M",
      "weight": 1,
      "detection_hint": "Identifiers must reflect role/content; comments clarify what sections do. Names like x1/tmp or vague comments are insufficient. Highlight the exact phrase(s) that satisfy or violate this indicator.",
      "success_examples": ["describe code function and behaviour"],
      "source_ref": "AS PDF"
    },
    {
      "id": "follows_language_conventions",
      "description": "Follows common conventions for the chosen programming language throughout.",
      "level": "M",
      "weight": 1,
      "detection_hint": "Demonstrate consistent idiomatic usage (naming, structures, idioms) for the chosen language. Mixed or ad-hoc styles without rationale are insufficient. Highlight the exact phrase(s) that satisfy or violate this indicator.",
      "success_examples": ["common conventions for the chosen programming language"],
      "source_ref": "AS PDF"
    },
    {
      "id": "boundary_testing_performed",
      "description": "Testing includes relevant boundary cases demonstrating correct behaviour on and around boundaries.",
      "level": "M",
      "weight": 2,
      "detection_hint": "Provide tests at, below, and above identified boundaries with expected vs actual results. Mentioning boundaries without concrete test evidence is insufficient. Highlight the exact phrase(s) that satisfy or violate this indicator.",
      "success_examples": ["lack of boundary testing for Merit", "on and around boundaries"],
      "source_ref": "Moderator commentary – Practices that need strengthening"
    },
    {
      "id": "well_structured_logical_response",
      "description": "Program constitutes a well-structured, logical response to the specified task.",
      "level": "E",
      "weight": 1,
      "detection_hint": "Show coherent modular structure aligned to task requirements. Functioning but tangled, duplicated, or ad-hoc designs are insufficient. Highlight the exact phrase(s) that satisfy or violate this indicator.",
      "success_examples": [],
      "source_ref": "AS PDF"
    },
    {
      "id": "comprehensive_testing_invalid_unexpected",
      "description": "Comprehensive testing includes invalid and unexpected inputs, evidencing robustness.",
      "level": "E",
      "weight": 2,
      "detection_hint": "Provide organised tests for invalid/unexpected inputs with observed handling. Typical-only tests are insufficient for Excellence. Highlight the exact phrase(s) that satisfy or violate this indicator.",
      "success_examples": ["Comprehensive testing is required for Excellence.", "include details of invalid and unexpected inputs"],
      "source_ref": "Moderator commentary – Practices that need strengthening"
    },
    {
      "id": "robustness_evidenced_by_testing",
      "description": "Testing evidence supports that the program is robust under adverse or unexpected conditions.",
      "level": "E",
      "weight": 1,
      "detection_hint": "Make an explicit link from test results to robustness (e.g., graceful failure/recovery). Stating robustness without corroborating tests is insufficient. Highlight the exact phrase(s) that satisfy or violate this indicator.",
      "success_examples": ["the program is robust"],
      "source_ref": "Moderator commentary – Practices that need strengthening"
    }
  ],
  "aggregation_rules": {
    "method": "hierarchical",
    "gate_sequence": ["A", "M", "E"],
    "levels": {
      "A": { "required_fraction": 1.0 },
      "M": { "required_fraction": 0.60 },
      "E": { "required_fraction": 0.50 }
    },
    "sub_band_logic": {
      "Achieved": {
        "A3": { "extra_merit_indicators": 0 },
        "A4": { "extra_merit_indicators": "≥1" }
      },
      "Merit": {
        "M5": { "extra_excellence_indicators": 0 },
        "M6": { "extra_excellence_indicators": "≥1" }
      },
      "Excellence": {
        "E7": { "excellence_fraction": "<1.0" },
        "E8": { "excellence_fraction": "1.0" }
      }
    },
    "fallback_grade": "N1"
  },
  "governance": {
    "last_validated": "2025-06-13",
    "change_log": []
  }
}
